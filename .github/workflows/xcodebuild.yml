name: xcodebuild

on:
  push:
    branches: [master]
    paths: 
    - 'Sources/*'
    - 'Tests/*'
    - '!Tests/LinuxMain.swift'
    - 'XCTAssertCrash.xcodeproj/*'
    - '.github/workflows/xcodebuild.yml'
  pull_request:
    paths:
    - 'Sources/*'
    - 'Tests/*'
    - '!Tests/LinuxMain.swift'
    - 'XCTAssertCrash.xcodeproj/*'
    - '.github/workflows/xcodebuild.yml'

jobs:
  xcodebuild:
    strategy:
      matrix:
        xcode:
          - version: '10.2'
            flag_for_test: -enableCodeCoverage YES -parallel-testing-enabled NO
          - version: '10.2.1'
            flag_for_test: -enableCodeCoverage YES -parallel-testing-enabled NO
          - version: '10.3'
            flag_for_test: -enableCodeCoverage YES -parallel-testing-enabled NO
          - version: '11'
            flag_for_test: -enableCodeCoverage YES -parallel-testing-enabled NO
    runs-on: macOS-10.14
    steps:
      - uses: actions/checkout@v1
      - run: xcodebuild -version
        env: 
          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode.version }}.app
      - name: macOS
        if: always()
        env:
          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode.version }}.app
        run: >
          xcodebuild -scheme XCTAssertCrash-Package -project XCTAssertCrash.xcodeproj 
          ${{ matrix.xcode.flag_for_test }} test | xcpretty
        shell: bash
      - name: iPhone Simulator
        if: always()
        env:
          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode.version }}.app
        run: > 
          xcodebuild -scheme XCTAssertCrash-Package -project XCTAssertCrash.xcodeproj
          ${{ matrix.xcode.flag_for_test }} test -sdk iphonesimulator -destination "name=iPhone 8" | xcpretty
        shell: bash
      - name: Apple TV Simulator
        if: always()
        env:
          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode.version }}.app
        run: >
          xcodebuild -scheme XCTAssertCrash-Package -project XCTAssertCrash.xcodeproj
          ${{ matrix.xcode.flag_for_test }} test -sdk appletvsimulator -destination "name=Apple TV 4K" | xcpretty
        shell: bash
      - run: curl -s https://codecov.io/bash | bash -s -- -t ${{ secrets.CODECOV_TOKEN }}
        if: always()
        shell: bash

  Analyze:
    runs-on: macOS-10.14
    steps:
      - uses: actions/checkout@v1
      - name: Generate xcodebuild.log
        if: always()
        env:
          DEVELOPER_DIR: /Applications/Xcode_10.3.app
        run: >
          xcodebuild -scheme XCTAssertCrash-Package -project XCTAssertCrash.xcodeproj 
          ${{ matrix.xcode.flag_for_test }} clean build-for-testing > xcodebuild.log
        shell: bash
      - name: Install SwiftLint
        run: >
          HOMEBREW_NO_AUTO_UPDATE=1 brew install https://raw.github.com/Homebrew/homebrew-core/master/Formula/swiftlint.rb
      - name: Run SwiftLint Analyze
        run: swiftlint analyze --strict --compiler-log-path xcodebuild.log
